name: Windows

on:
  pull_request:
  push:
  release:
    types: published

jobs:
  BuildAndTest:
    strategy:
      matrix:
        image: [windows-2019, windows-2022]
        config: [Release, Debug]

    runs-on: ${{ matrix.image }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: windows-${{ matrix.image }}-${{ matrix.config }}

    - name: Install dependencies
      run: choco install re2c

    - name: Configure
      env:
        CFLAGS:   ${{ matrix.config == 'Debug' && '/fsanitize=address' || '' }}
        CXXLAGS:  ${{ matrix.config == 'Debug' && '/fsanitize=address' || '' }}
      run: |
        cmake -B build -DCMAKE_CONFIGURATION_TYPES=${{ matrix.config }} -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: |
        cmake --build build --parallel --config ${{ matrix.config }}

    - name: Test
      working-directory: build
      run: |
        ctest --schedule-random --progress --output-on-failure --parallel --no-tests error --build-config ${{ matrix.config }}

  Release:
    runs-on: windows-latest
    if: github.event.action == 'published'
    needs: BuildAndTest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Install dependencies
      run: choco install re2c

    - name: Configure ninja
      run: |
        cmake -B build -DCMAKE_CONFIGURATION_TYPES=Release

    - name: Build ninja
      run: |
        cmake --build build --parallel --config Release --target ninja

    - name: Create ninja archive
      run: |
        mkdir artifact
        7z a artifact/ninja-win.zip ./build/Release/ninja.exe

    # Upload ninja binary archive as an artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: ninja-binary-archives
        path: artifact

    - name: Upload release asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./artifact/ninja-win.zip
        asset_name: ninja-win.zip
        asset_content_type: application/zip
